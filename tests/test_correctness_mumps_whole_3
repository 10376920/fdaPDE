pathnames = list.files(pattern="[.]R$", path="./R/", full.names=TRUE);
sapply(pathnames, FUN=source);
source("tests/mesh.R")

dyn.load("fdaPDE_original.so")
order = 1
lambda=1

grid = mesh_quadratounitario(30)
mesh = create.MESH.2D(nodes=grid$nodes, order = order)
n_observations = nrow(grid$nodes)
n= nrow(grid$nodes)
observations = sin(2*pi*mesh$nodes[,1]) + rnorm(n = nrow(mesh$nodes), sd = 0.1)
locations <- cbind(cbind(runif(n,0,1)),cbind(runif(n,0,1)))
observations_not_on_nodes = sin(2*pi*locations[,1]) + rnorm(n = nrow(locations), sd = 0.1)
covariates = cbind(cbind(runif(n,-100,100)),cbind(runif(n,-100,100)))
FEMbasis = create.FEM.basis(mesh)

output_Eardi =
		    smooth.FEM.basis(observations = observations,
		                     FEMbasis = FEMbasis,
		                     lambda = lambda,
		                     covariates = covariates,
		                     GCV = TRUE,
		                     CPP_CODE = TRUE)

dyn.load("fdaPDE_MUMPS_whole.so")
output_whole =
            smooth.FEM.basis(observations = observations,
		                     FEMbasis = FEMbasis,
		                     lambda = lambda,
		                     covariates = covariates,
		                     GCV = TRUE,
		                     CPP_CODE = TRUE)

cat("edf Eardi = ", output_Eardi$edf,
    "\nedf MUMPS = ", output_whole$edf,
    "\nerr = ", output_Eardi$edf - output_whole$edf,
    "\n")

